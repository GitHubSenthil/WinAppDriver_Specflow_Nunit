using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Text;
using TeamsWindowsApp.Driver;
using TeamsWindowsApp.Helper;
using TeamsWindowsApp.Pages;
using TechTalk.SpecFlow;
using TechTalk.SpecFlow.Infrastructure;

namespace TeamsWindowsApp.Hooks
{
    [Binding]
    public class Hook
    {
        private static ISpecFlowOutputHelper _outHelper;
        private readonly FeatureContext _featureContext;
        private readonly DataReader _reader;
        private static Process _windriver;
        private readonly TeamsLogin _loginPage;

        public Hook(FeatureContext featureContext, DataReader reader, TeamsLogin loginPage)
        {
            _featureContext = featureContext;
            _reader = reader;
            _loginPage = loginPage;

        }

        [BeforeTestRun]
        public static void StartWinAppDriver()
        {
            try
            {
                if (CommonUtil.checkProcessRunning("WinAppDriver"))
                    CommonUtil.KillProcess("WinAppDriver");
                
                var configurationDriver = new ConfigurationDriver();
                //Getting Environment to Run the scripts
                Environment.SetEnvironmentVariable("ENV", configurationDriver.Configuration["Env"]);
                _windriver = Process.Start(configurationDriver.Configuration["winAppPath"]);
                Console.WriteLine("WinApp Driver Launched successfully");
                new Reporting(_outHelper).CreateFolder();
				CommonUtil.getObjectData();
                TeamsLogin.QuitTeamsApp();
            }
            catch (FileNotFoundException e)
            {
                Console.WriteLine("Could not locate WinAppDriver.exe, get it from https://github.com/Microsoft/WinAppDriver/releases and change the winAppPath in app.settings accordingly");
                Console.Write(e.Message);
                Console.Write(e.StackTrace);
                throw e;
            }
            catch (Exception e)
            {
                string message = e.Message;
                string stackTrace = e.StackTrace;
                Console.WriteLine("Get an exception when Start WinAppDriver. Error: " + e.Message);
                Console.Write(e.StackTrace);
                throw e;
            }
        }

        [AfterScenario]
        public void closeDriver()
        {
           //TeamsLogin.QuitTeamsApp();
        }
       
        [AfterTestRun]
        public static void KillWinAppDriver()
        {
            Console.WriteLine("------Teams Quit-----------");
            System.Threading.Thread.Sleep(5000);
            //TeamsLogin.QuitTeamsApp();
            Console.WriteLine("------WinAppDriverKill-----------");
            _windriver.Kill();
            CommonUtil.disposeObjectData();
            Console.WriteLine("------Full Report-----------");
            //full Report
            Reporting.fullReport();
            Console.WriteLine("------Customized Report-----------");
            // Cutomized Report - Only executed scenarios
            Reporting.customizeFormat_ReportGeneration();
            Console.WriteLine("------######Execution Completed#######-----------");

        }

    }
}
